// app.js - –ì–ª–∞–≤–Ω—ã–π —Ñ–∞–π–ª –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è

// –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
window.sessionParams = null;
window.returnScreenFromParams = 'setSelectorScreen';

function init() {
    updateMainStats();
    // –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–ø–∏—Å–æ–∫ –Ω–∞–±–æ—Ä–æ–≤ –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    loadSetsIndex();
}

// –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç–æ–ª—å–∫–æ –¥–∞–Ω–Ω—ã–µ –æ –Ω–∞–±–æ—Ä–∞—Ö (–±–µ–∑ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è)
async function loadSetsIndex() {
    try {
        const indexUrl = `https://raw.githubusercontent.com/Akira-27-CZ/czech-learning/main/word-sets/index.json`;
        const response = await fetch(indexUrl);
        
        if (response.ok) {
            const data = await response.json();
            availableSets = data.sets || [];
        }
    } catch (e) {
        console.error('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Å–ø–∏—Å–æ–∫ –Ω–∞–±–æ—Ä–æ–≤:', e);
    }
}

function showScreen(screenId) {
    document.querySelectorAll('.screen').forEach(screen => {
        screen.classList.remove('active');
    });
    document.getElementById(screenId).classList.add('active');

    if (screenId === 'statsScreen') {
        updateStatsScreen();
    }
    if (screenId === 'mainScreen') {
        updateMainStats();
    }
    if (screenId === 'setsScreen') {
        // –¢–µ–ø–µ—Ä—å —Ç–æ–ª—å–∫–æ –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º –Ω–∞–±–æ—Ä—ã (–¥–∞–Ω–Ω—ã–µ —É–∂–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã)
        displaySets();
    }
}

function showSetSelector() {
    const words = loadWords();
    
    if (words.length === 0) {
        alert('–°–Ω–∞—á–∞–ª–∞ –¥–æ–±–∞–≤—å —Å–ª–æ–≤–∞ –≤ –±–∞–∑—É!');
        showScreen('setsScreen');
        return;
    }

    showScreen('setSelectorScreen');
    displaySetSelector();
}

function displaySetSelector() {
    const words = loadWords();
    const container = document.getElementById('setSelector');
    const setNames = [...new Set(words.map(w => w.setName).filter(n => n))];
    
    container.innerHTML = '';

    const randomOption = document.createElement('div');
    randomOption.className = 'set-option';
    randomOption.innerHTML = `
        <div class="set-option-title">üé≤ –°–ª—É—á–∞–π–Ω—ã–µ —Å–ª–æ–≤–∞</div>
        <div class="set-option-info">–°–ª–æ–≤–∞ –∏–∑ –≤—Å–µ—Ö –Ω–∞–±–æ—Ä–æ–≤ —Å —É–º–Ω—ã–º –ø–æ–¥–±–æ—Ä–æ–º</div>
        <div style="margin-top: 10px;">
            <button class="button small secondary" onclick="event.stopPropagation(); startRandomSession()">–ù–∞—á–∞—Ç—å —Å–µ—Å—Å–∏—é</button>
        </div>
    `;
    container.appendChild(randomOption);

    setNames.forEach(setName => {
        const setWords = words.filter(w => w.setName === setName);
        const option = document.createElement('div');
        option.className = 'set-option';
        option.innerHTML = `
            <div class="set-option-title">${setName}</div>
            <div class="set-option-info">üìö ${setWords.length} —Å–ª–æ–≤</div>
            <div style="margin-top: 10px;">
                <button class="button small" onclick="event.stopPropagation(); showSetPreview('${setName}')">–ü—Ä–æ—Å–º–æ—Ç—Ä —Å–ª–æ–≤</button>
                <button class="button small secondary" onclick="event.stopPropagation(); startSessionWithSet('${setName}')" style="margin-left: 10px;">–ù–∞—á–∞—Ç—å —Å–µ—Å—Å–∏—é</button>
            </div>
        `;
        container.appendChild(option);
    });
}

function startSessionWithSet(setName) {
    window.sessionParams = {
        setName: setName,
        isRandom: false
    };
    window.returnScreenFromParams = 'setSelectorScreen';
    showScreen('sessionParamsScreen');
}

function startRandomSession() {
    window.sessionParams = {
        setName: null,
        isRandom: true
    };
    window.returnScreenFromParams = 'setSelectorScreen';
    showScreen('sessionParamsScreen');
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
document.addEventListener('DOMContentLoaded', init);
